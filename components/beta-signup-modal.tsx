"use client";

import * as React from "react";
import { useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";
import Select from 'react-select'; // Import react-select

// Add countries data
const countries = [
  "United States ðŸ‡ºðŸ‡¸",
  "United Kingdom ðŸ‡¬ðŸ‡§",
  "Canada ðŸ‡¨ðŸ‡¦",
  "Australia ðŸ‡¦ðŸ‡º",
  "Germany ðŸ‡©ðŸ‡ª",
  "France ðŸ‡«ðŸ‡·",
  "Spain ðŸ‡ªðŸ‡¸",
  "Italy ðŸ‡®ðŸ‡¹",
  "Japan ðŸ‡¯ðŸ‡µ",
  "China ðŸ‡¨ðŸ‡³",
  "India ðŸ‡®ðŸ‡³",
  "Brazil ðŸ‡§ðŸ‡·",
  "Mexico ðŸ‡²ðŸ‡½",
  "South Africa ðŸ‡¿ðŸ‡¦",
  "Nigeria ðŸ‡³ðŸ‡¬",
  "Russia ðŸ‡·ðŸ‡º",
  "South Korea ðŸ‡°ðŸ‡·",
  "Singapore ðŸ‡¸ðŸ‡¬",
  "New Zealand ðŸ‡³ðŸ‡¿",
  "Ireland ðŸ‡®ðŸ‡ª",
  "Netherlands ðŸ‡³ðŸ‡±",
  "Sweden ðŸ‡¸ðŸ‡ª",
  "Norway ðŸ‡³ðŸ‡´",
  "Denmark ðŸ‡©ðŸ‡°",
  "Finland ðŸ‡«ðŸ‡®",
  "Afghanistan ðŸ‡¦ðŸ‡«",
  "Albania ðŸ‡¦ðŸ‡±",
  "Algeria ðŸ‡©ðŸ‡¿",
  "Andorra ðŸ‡¦ðŸ‡©",
  "Angola ðŸ‡¦ðŸ‡´",
  "Argentina ðŸ‡¦ðŸ‡·",
  "Armenia ðŸ‡¦ðŸ‡²",
  "Austria ðŸ‡¦ðŸ‡¹",
  "Azerbaijan ðŸ‡¦ðŸ‡¿",
  "Bahamas ðŸ‡§ðŸ‡¸",
  "Bahrain ðŸ‡§ahrain",
  "Bangladesh ðŸ‡§ðŸ‡©",
  "Barbados ðŸ‡§ðŸ‡§",
  "Belarus ðŸ‡§ðŸ‡¾",
  "Belgium ðŸ‡§ðŸ‡ª",
  "Belize ðŸ‡§ðŸ‡¿",
  "Benin ðŸ‡§ðŸ‡¯",
  "Bhutan ðŸ‡§ðŸ‡¹",
  "Bolivia ðŸ‡§ðŸ‡´",
  "Bosnia and Herzegovina ðŸ‡§ðŸ‡¦",
  "Botswana ðŸ‡§ðŸ‡¼",
  "Bulgaria ðŸ‡§ðŸ‡¬",
  "Burkina Faso ðŸ‡§ðŸ‡«",
  "Burundi ðŸ‡§ðŸ‡®",
  "Cabo Verde ðŸ‡¨ðŸ‡»",
  "Cambodia ðŸ‡°ðŸ‡­",
  "Cameroon ðŸ‡¨ðŸ‡²",
  "Central African Republic ðŸ‡¨ðŸ‡«",
  "Chad ðŸ‡¹ðŸ‡©",
  "Chile ðŸ‡¨ðŸ‡±",
  "Colombia ðŸ‡¨ðŸ‡´",
  "Congo ðŸ‡¨ðŸ‡¬",
  "Costa Rica ðŸ‡¨ðŸ‡·",
  "Croatia ðŸ‡­ðŸ‡·",
  "Cuba ðŸ‡¨ðŸ‡º",
  "Cyprus ðŸ‡¨ðŸ‡¾",
  "Czech Republic ðŸ‡¨ðŸ‡¿",
  "Djibouti ðŸ‡©ðŸ‡¯",
  "Dominica ðŸ‡©ðŸ‡²",
  "Dominican Republic ðŸ‡©ðŸ‡´",
  "Ecuador ðŸ‡ªðŸ‡¨",
  "Egypt ðŸ‡ªðŸ‡¬",
  "El Salvador ðŸ‡¸ðŸ‡»",
  "Equatorial Guinea ðŸ‡¬ðŸ‡¶",
  "Eritrea ðŸ‡ªðŸ‡·",
  "Estonia ðŸ‡ªðŸ‡ª",
  "Eswatini ðŸ‡¸ðŸ‡¿",
  "Ethiopia ðŸ‡ªðŸ‡¹",
  "Fiji ðŸ‡«ðŸ‡¯",
  "Gabon ðŸ‡¬ðŸ‡¦",
  "Gambia ðŸ‡¬ðŸ‡²",
  "Georgia ðŸ‡¬ðŸ‡ª",
  "Ghana ðŸ‡¬ðŸ‡­",
  "Greece ðŸ‡¬ðŸ‡·",
  "Grenada ðŸ‡¬ðŸ‡©",
  "Guatemala ðŸ‡¬ðŸ‡¹",
  "Guinea ðŸ‡¬ðŸ‡³",
  "Guinea-Bissau ðŸ‡¬ðŸ‡¼",
  "Guyana ðŸ‡¬ðŸ‡¾",
  "Haiti ðŸ‡­ðŸ‡¹",
  "Honduras ðŸ‡­ðŸ‡³",
  "Hungary ðŸ‡­ðŸ‡º",
  "Iceland ðŸ‡®ðŸ‡¸",
  "Indonesia ðŸ‡®ðŸ‡©",
  "Iran ðŸ‡®ðŸ‡·",
  "Iraq ðŸ‡®ðŸ‡¶",
  "Israel ðŸ‡®ðŸ‡±",
  "Ivory Coast ðŸ‡¨ðŸ‡®",
  "Jamaica ðŸ‡¯ðŸ‡²",
  "Jordan ðŸ‡¯ðŸ‡´",
  "Kazakhstan ðŸ‡°ðŸ‡¿",
  "Kenya ðŸ‡°ðŸ‡ª",
  "Kiribati ðŸ‡°ðŸ‡®",
  "Kuwait ðŸ‡°ðŸ‡¼",
  "Kyrgyzstan ðŸ‡°ðŸ‡¬",
  "Laos ðŸ‡±ðŸ‡¦",
  "Latvia ðŸ‡±ðŸ‡»",
  "Lebanon ðŸ‡±ðŸ‡§",
  "Lesotho ðŸ‡±ðŸ‡¸",
  "Liberia ðŸ‡±ðŸ‡·",
  "Libya ðŸ‡±ðŸ‡¾",
  "Liechtenstein ðŸ‡±ðŸ‡®",
  "Lithuania ðŸ‡±ðŸ‡¹",
  "Luxembourg ðŸ‡±ðŸ‡º",
  "Madagascar ðŸ‡²ðŸ‡¬",
  "Malawi ðŸ‡²ðŸ‡¼",
  "Malaysia ðŸ‡²ðŸ‡¾",
  "Maldives ðŸ‡²ðŸ‡»",
  "Mali ðŸ‡²ðŸ‡±",
  "Malta ðŸ‡²ðŸ‡¹",
  "Marshall Islands ðŸ‡²ðŸ‡­",
  "Mauritania ðŸ‡²ðŸ‡·",
  "Mauritius ðŸ‡²ðŸ‡º",
  "Micronesia ðŸ‡«ðŸ‡²",
  "Moldova ðŸ‡²ðŸ‡©",
  "Monaco ðŸ‡²ðŸ‡¨",
  "Mongolia ðŸ‡²ðŸ‡³",
  "Montenegro ðŸ‡²ðŸ‡ª",
  "Morocco ðŸ‡²ðŸ‡¦",
  "Mozambique ðŸ‡²ðŸ‡¿",
  "Myanmar ðŸ‡²ðŸ‡²",
  "Namibia ðŸ‡³ðŸ‡¦",
  "Nauru ðŸ‡³ðŸ‡·",
  "Nepal ðŸ‡³ðŸ‡µ",
  "Nicaragua ðŸ‡³ðŸ‡®",
  "Niger ðŸ‡³ðŸ‡ª",
  "North Macedonia ðŸ‡²ðŸ‡°",
  "Oman ðŸ‡´ðŸ‡²",
  "Pakistan ðŸ‡µðŸ‡°",
  "Palau ðŸ‡µðŸ‡¼",
  "Panama ðŸ‡µðŸ‡¦",
  "Papua New Guinea ðŸ‡µðŸ‡¬",
  "Paraguay ðŸ‡µðŸ‡¾",
  "Peru ðŸ‡µðŸ‡ª",
  "Philippines ðŸ‡µðŸ‡­",
  "Poland ðŸ‡µðŸ‡±",
  "Portugal ðŸ‡µðŸ‡¹",
  "Qatar ðŸ‡¶ðŸ‡¦",
  "Romania ðŸ‡·ðŸ‡´",
  "Rwanda ðŸ‡·ðŸ‡¼",
  "Saint Kitts and Nevis ðŸ‡°ðŸ‡³",
  "Saint Lucia ðŸ‡±ðŸ‡¨",
  "Saint Vincent and the Grenadines ðŸ‡»ðŸ‡¨",
  "Samoa ðŸ‡¼ðŸ‡¸",
  "San Marino ðŸ‡¸ðŸ‡²",
  "Sao Tome and Principe ðŸ‡¸ðŸ‡¹",
  "Saudi Arabia ðŸ‡¸ðŸ‡¦",
  "Senegal ðŸ‡¸ðŸ‡³",
  "Serbia ðŸ‡·ðŸ‡¸",
  "Seychelles ðŸ‡¸ðŸ‡¨",
  "Sierra Leone ðŸ‡¸ðŸ‡±",
  "Slovakia ðŸ‡¸ðŸ‡°",
  "Slovenia ðŸ‡¸ðŸ‡®",
  "Solomon Islands ðŸ‡¸ðŸ‡§",
  "Somalia ðŸ‡¸ðŸ‡´",
  "South Sudan ðŸ‡¸ðŸ‡¸",
  "Sri Lanka ðŸ‡±ðŸ‡°",
  "Sudan ðŸ‡¸ðŸ‡©",
  "Suriname ðŸ‡¸ðŸ‡·",
  "Switzerland ðŸ‡¨ðŸ‡­",
  "Syria ðŸ‡¸ðŸ‡¾",
  "Taiwan ðŸ‡¹ðŸ‡¼",
  "Tajikistan ðŸ‡¹ðŸ‡¯",
  "Tanzania ðŸ‡¹ðŸ‡¿",
  "Thailand ðŸ‡¹ðŸ‡­",
  "Timor-Leste ðŸ‡¹ðŸ‡±",
  "Togo ðŸ‡¹ðŸ‡¬",
  "Tonga ðŸ‡¹ðŸ‡´",
  "Trinidad and Tobago ðŸ‡¹ðŸ‡¹",
  "Tunisia ðŸ‡¹ðŸ‡³",
  "Turkey ðŸ‡¹ðŸ‡·",
  "Turkmenistan ðŸ‡¹ðŸ‡²",
  "Tuvalu ðŸ‡¹ðŸ‡»",
  "Uganda ðŸ‡ºðŸ‡¬",
  "Ukraine ðŸ‡ºðŸ‡¦",
  "United Arab Emirates ðŸ‡¦ðŸ‡ª",
  "Uruguay ðŸ‡ºðŸ‡¾",
  "Uzbekistan ðŸ‡ºðŸ‡¿",
  "Vanuatu ðŸ‡»ðŸ‡º",
  "Vatican City ðŸ‡»ðŸ‡¦",
  "Venezuela ðŸ‡»ðŸ‡ª",
  "Vietnam ðŸ‡»ðŸ‡³",
  "Yemen ðŸ‡¾ðŸ‡ª",
  "Zambia ðŸ‡¿ðŸ‡²",
  "Zimbabwe ðŸ‡¿ðŸ‡¼",
].sort();

interface BetaSignupModalProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

export function BetaSignupModal({ open, onOpenChange }: BetaSignupModalProps) {
  const [loading, setLoading] = useState(false);
  const { toast } = useToast();
  const countryOptions = countries.map(country => ({ value: country, label: country })); // Format countries for react-select
  const [selectedCountry, setSelectedCountry] = useState<any>(null); // State to hold selected country

  async function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    setLoading(true);

    const formData = new FormData(e.currentTarget);
    const data = {
      firstName: formData.get("firstName"),
      lastName: formData.get("lastName"),
      email: formData.get("email"),
      country: selectedCountry?.value || '', // Use selected country value
    };

    try {
      const res = await fetch("/api/beta-signup", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      const result = await res.json();

      if (res.status === 409) {
        toast({
          title: "Already Registered",
          description:
            "This email is already registered for the beta waitlist.",
          variant: "default",
        });
        onOpenChange(false);
      } else if (!res.ok) {
        throw new Error(result.error || "Failed to register");
      } else {
        toast({
          title: "Success! ðŸŽ‰",
          description:
            "You've been successfully added to the beta waitlist. We'll notify you when access is available.",
          variant: "default",
        });
        onOpenChange(false);
      }
    } catch (error) {
      toast({
        title: "Registration Failed",
        description:
          error instanceof Error
            ? error.message
            : "There was a problem registering for the beta. Please try again later.",
        variant: "destructive",
      });
    } finally {
      setLoading(false);
    }
  }

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-md w-[95vw] max-w-[95vw] sm:w-auto p-4 sm:p-6">
        <DialogHeader>
          <DialogTitle className="text-center text-2xl">
            Join the Beta
          </DialogTitle>
          <DialogDescription className="text-center">
            Sign up to get early access to learn.sol
          </DialogDescription>
        </DialogHeader>
        <form onSubmit={onSubmit} className="space-y-4 py-4">
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div className="space-y-2">
              <Input
                id="firstName"
                name="firstName"
                placeholder="First name"
                required
                className="bg-white/10 border-white/10"
              />
            </div>
            <div className="space-y-2">
              <Input
                id="lastName"
                name="lastName"
                placeholder="Last name"
                required
                className="bg-white/10 border-white/10"
              />
            </div>
          </div>
          <div className="space-y-2">
            <Input
              id="email"
              name="email"
              type="email"
              placeholder="Email"
              required
              className="bg-white/10 border-white/10"
            />
          </div>
          <div className="space-y-2">
            <Select
              options={countryOptions}
              value={selectedCountry}
              onChange={(selectedOption) => setSelectedCountry(selectedOption)}
              placeholder="Select your country"
              isSearchable
              styles={{
                control: (baseStyles) => ({
                  ...baseStyles,
                  backgroundColor: 'rgba(255, 255, 255, 0.1)',
                  borderColor: 'rgba(255, 255, 255, 0.1)',
                }),
                singleValue: (baseStyles) => ({
                  ...baseStyles,
                  color: 'white',
                }),
                input: (baseStyles) => ({
                  ...baseStyles,
                  color: 'white',
                }),
                menu: (baseStyles) => ({
                  ...baseStyles,
                  backgroundColor: '#1f1f1f',
                }),
                option: (baseStyles, state) => ({
                  ...baseStyles,
                  backgroundColor: state.isFocused ? '#2f2f2f' : '#1f1f1f',
                  color: 'white',
                  ':active': {
                    backgroundColor: '#3f3f3f',
                  },
                }),
                placeholder: (baseStyles) => ({
                  ...baseStyles,
                  color: '#9ca3af',
                }),
              }}
            />
          </div>
          <div className="flex justify-end">
            <Button
              type="submit"
              disabled={loading}
              className="bg-gradient-to-r from-[#14F195] to-[#9945FF] hover:opacity-90 text-black w-full"
            >
              {loading ? "Submitting..." : "Submit"}
            </Button>
          </div>
        </form>
      </DialogContent>
    </Dialog>
  );
}
